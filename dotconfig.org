#+title: .config files

* shell-script
  
** bashrc
   :PROPERTIES:
   :header-args: :tangle ~/.bashrc
   :END:

   This file tends to be gigantic and I don't really put that much code into it anyway.
   
** bash_aliases
   :PROPERTIES:
   :header-args: :tangle ~/.bash_aliases
   :END:

*** Functions

    This function creates a new directory and ~cd~ s into it.

#+begin_src shell-script
  function mkcd {
    last=$(eval "echo \$$#")
    if [ ! -n "$last" ]; then
      echo "Enter a directory name"
    elif [ -d $last ]; then
      echo "\`$last' already exists"
    else
      mkdir $@ && cd $last
    fi
  }
#+end_src

     A few utility functions to set up and then tear down the connection with
     my remote desk at work. I should move this to a simple (but better
     featured) python script.

#+begin_src shell-script
  function set_up_citius_remote {
      nmcli con up id vpn-UDP4-1194
      ssh ctdesknb
      echo "Close this ssh connection to kill port forwarding."
  }
  
  function frwd_port() {
      # Forwards port $1 into port $2 and listens to it
      ssh -N -f -L localhost:$2:localhost:$1 ctdesk
  }
  
  function kill_frwd_port() {
      lsof -ti:$1 | xargs kill
  }
#+end_src

    This function I found somewhere simply extracts any file regardless of its
    extension.

#+begin_src shell-script
  function ex ()
  {
      if [ -f $1 ] ; then
          case $1 in
              ,*.tar.bz2)   tar xjf $1   ;;
              ,*.tar.gz)    tar xzf $1   ;;
              ,*.bz2)       bunzip2 $1   ;;
              ,*.rar)       unrar x $1   ;;
              ,*.gz)        gunzip $1    ;;
              ,*.tar)       tar xf $1    ;;
              ,*.tbz2)      tar xjf $1   ;;
              ,*.tgz)       tar xzf $1   ;;
              ,*.zip)       unzip $1     ;;
              ,*.Z)         uncompress $1;;
              ,*.7z)        7z x $1      ;;
              ,*.deb)       ar x $1      ;;
              ,*.tar.xz)    tar xf $1    ;;
              ,*.tar.zst)   unzstd $1    ;;
              ,*)           echo "'$1' cannot be extracted via ex()" ;;
          esac
      else
          echo "'$1' is not a valid file"
      fi
  }
  
#+end_src

*** General aliases
    
    Alias for managing configurations using a bare git repository.

#+begin_src shell-script
  alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
#+end_src

    I need to alias emacs to emacsclient (/disabled for now/).
  
#+begin_src shell-script :tangle no
  alias emacs='emacsclient'
#+end_src

    More utility aliases

#+begin_src shell-script
  alias python="python3"
  alias pip="pip3"
  alias tfgpu="conda activate tfgpu"
  alias jlab="jupyter lab"
  alias droidcam_audio="pacmd load-module module-alsa-source device=hw:Loopback,1,0"
  # alias emacs="flatpak run org.gnu.emacs"
  # Should use /etc/fstab for automounting, but...
  alias mount_work_folder="sshfs ctdesk:/home/adrian.berges.enfedaque/+dev/finsa/ ~/work/"
  
  # exa instead of ls
  alias ls="exa"
  alias ll="exa -ahlF"
  alias la="exa -a"
  alias tree="exa --tree"
#+end_src


* .ssh
  :PROPERTIES:
  :header-args: :tangle ~/.ssh/config
  :END:
 

  First, I want an alias for my desktop at CiTIUS, which will also serve as a
  base for other aliases related to it.

#+begin_src conf
  Host ctdesk*
      HostName 172.16.243.243
      user adrian.berges.enfedaque
      # IdentityFile ~/.ssh/citius-desk
      IdentityFile ~/.ssh/rsa_citius
#+end_src

  Now, create another alias that connects to said desk and forwards
  ~localhost:8888~ too, for notebook use. You can call it with ~ssh -Nf ctdesknb~. 
  I haven't yet discovered how to force ssh to first connect via ~nmcli~.

#+begin_src conf
  Host ctdesknb
    LocalForward 8888 localhost:8888
#+end_src

  Another alias for Finis Terrae II supercomputer.

#+begin_src conf
  Host cesga
       Hostname ft2.cesga.es
       User uscciabe
       ProxyJump ctdesk
       ForwardAgent yes
#+end_src

  This one configures access to github.com via ~IdentityFile~ exclusively.

#+begin_src conf
  Host github.com
       IdentitiesOnly yes
       IdentityFile ~/.ssh/personal_github_ed25519
#+end_src



  
;; Local Variables: 
;; eval: (add-hook 'after-save-hook (lambda ()(if (y-or-n-p "Tangle?")(org-babel-tangle))) nil t) 
;; End:
