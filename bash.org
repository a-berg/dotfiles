* =bashrc=
:PROPERTIES:
:header-args:shell: :tangle "~/.bashrc"
:END:

The problem is, bashrc has a lot of auto-written code, I typically only add a few lines
at the end. How to append instead of overwrite?

* =bash_aliases=
:PROPERTIES:
:header-args:shell: :tangle "~/.bash_aliases"
:END:

** Generic aliases

These are just your run-of-the-mill aliases

#+begin_src shell
  # alias config='/usr/bin/git --git-dir=/home/adrian/.cfg/ --work-tree=/home/adrian'
  alias python="python3"
  alias pip="pip3"
  alias tfgpu="conda activate tfgpu"
  alias jlab="jupyter lab"
  # alias droidcam_audio="pacmd load-module module-alsa-source device=hw:Loopback,1,0"
  alias emacs="flatpak run org.gnu.emacs"

#+end_src

Should use =/etc/fstab= for automounting, but...

#+begin_src shell
  alias mount_work_folder="sshfs ctdesk:/home/adrian.berges.enfedaque/+dev/finsa/ ~/work/"
#+end_src

I fell in love with =exa=, so there are some aliases for it (masks =ls=)

#+begin_src shell
  alias ls="exa"
  alias ll="exa -ahlF"
  alias la="exa -a"
  alias tree="exa --tree"
#+end_src

** Work-related functions

   Some functions I defined to make common work-related stuff easier.

   #+begin_src shell
     function easy_forward() {
	 # Forwards port $1 into port $2 and listens to it
	 ssh -N -f -L localhost:$2:localhost:$1 ctdesk
     }

     function kill_frwd_port() {
	 lsof -ti:$1 | xargs kill
     }

     function set_up_citius_remote() {
	 nmcli con up id vpn-UDP4-1194 # Turn the vpn on
	 easy_forward 8888 8888 # Forward port 8888 so jupyter notebooks work
	 easy_forward 6006 6006 # Forward port 6006 so tensorboard works
	 clear # Flush previous messages
	 ssh ctdesk # connect via ssh (not really necessary as I mostly use browser and emacs to do most of the work but it's nice to have a terminal just in case)
     }

     function tear_down_citius_remote() {
	 kill_frwd_port 8888
	 kill_frwd_port 6006
	 nmcli con down id vpn-UDP4-1194
	 clear
     }
   #+end_src

** Other

   Some functions I have collected from the internet.

   #+begin_src shell
     # mkcd - Cool little utility for making then going into directories.
     function mkcd() { mkdir -p "$@" && cd "$@"; }

     # ex - Simply extracts archives in any compressed format known(?)
     function ex ()
     {
	 if [ -f $1 ] ; then
	     case $1 in
		 ,*.tar.bz2)   tar xjf $1   ;;
		 ,*.tar.gz)    tar xzf $1   ;;
		 ,*.bz2)       bunzip2 $1   ;;
		 ,*.rar)       unrar x $1   ;;
		 ,*.gz)        gunzip $1    ;;
		 ,*.tar)       tar xf $1    ;;
		 ,*.tbz2)      tar xjf $1   ;;
		 ,*.tgz)       tar xzf $1   ;;
		 ,*.zip)       unzip $1     ;;
		 ,*.Z)         uncompress $1;;
		 ,*.7z)        7z x $1      ;;
		 ,*.deb)       ar x $1      ;;
		 ,*.tar.xz)    tar xf $1    ;;
		 ,*.tar.zst)   unzstd $1    ;;
		 ,*)           echo "'$1' cannot be extracted via ex()" ;;
	     esac
	 else
	     echo "'$1' is not a valid file"
	 fi
     }
   #+end_src
